<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-09-14 at 19:47:55.
 */
class Candidato_test extends TestCase {

    /**
     * @var Candidato
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = $this->newController('Candidato');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Candidato::filtro
     * @todo   Implement test_filtro().
     */
    public function test_filtro() {
        //Preparação dos dados
        $testes = array(
            '1'=> array(
                'num' => 1,
                'habilidade' => 5,
                'expectativa' => FALSE),
            '2'=> array(
                'num' => 2,
                'habilidade' => 7,
                'expectativa' => TRUE),
            '3'=> array(
                'num' => 3,
                'habilidade' => 8,
                'expectativa' => TRUE));
        
        foreach($testes as $teste){
            
            //Carregando variaveis
            $num = $teste['num'];
            $habilidade = $teste['habilidade'];
            $expectativa = $teste['expectativa'];
           
            //Execução dos testes
            $retorno = $this->object->filtro($habilidade);
            $menssagem = "ATENÇÃO: Teste Número ".$num." Falhou!";
            //Vereificação do teste
            $this->assertEquals($expectativa, $retorno,$menssagem);
            
        }
         
    }

    /**
     * @covers Candidato::envia_email
     * @todo   Implement test_envia_email().
     */
    public function test_envia_email() {
       
    }

    /**
     * @covers Candidato::aptoFrontEnd
     * @todo   Implement test_aptofrontend().
     */
    public function test_aptofrontend() {
        // Preparação dos dados
        $testes = array(
            '1'=> array(
                'num' => 1,
                'html' => TRUE,
                'css' => TRUE,
                'js' => TRUE,
                'email' => '',
                'expectativa' => TRUE),
            '2'=> array(
                'num' => 2,
                'html' => FALSE,
                'css' => TRUE,
                'js' => TRUE,
                'email' => '',
                'expectativa' => FALSE),
            '3'=> array(
                'num' => 3,
                'html' => TRUE,
                'css' => FALSE,
                'js' => TRUE,
                'email' => '',
                'expectativa' => FALSE),
            '4'=> array(
                'num' => 4,
                'html' => TRUE,
                'css' => TRUE,
                'js' => FALSE,
                'email' => '',
                'expectativa' => FALSE));
        
        foreach($testes as $teste){
            
            //Carregando variaveis
            $num = $teste['num'];
            $html = $teste['html'];
            $css = $teste['css'];
            $js = $teste['js'];
            $email = $teste['email'];
            $expectativa = $teste['expectativa'];
            
            //Execução dos testes
            $retorno = $this->object->aptofrontend($html,$css,$js,$email);
            $menssagem = "ATENÇÃO: Teste Número ".$num." Falhou!";
            //Vereificação do teste
            $this->assertEquals($expectativa, $retorno,$menssagem);
            
        }

    }

    /**
     * @covers Candidato::aptoBackEnd
     * @todo   Implement test_aptobackend().
     */
    public function test_aptobackend() {
        // Preparação dos dados
        $testes = array(
            '1'=> array(
                'num' => 1,
                'python' => TRUE,
                'django' => TRUE,
                'email' => '',
                'expectativa' => TRUE),
            '2'=> array(
                'num' => 2,
                'python' => FALSE,
                'django' => TRUE,
                'email' => '',
                'expectativa' => FALSE),
            '3'=> array(
                'num' => 3,
                'python' => TRUE,
                'django' => FALSE,
                'email' => '',
                'expectativa' => FALSE),
            '4'=> array(
                'num' => 4,
                'python' => FALSE,
                'django' => FALSE,
                'email' => '',
                'expectativa' => FALSE));
        
        foreach($testes as $teste){
            //Carregando variaveis
            $num = $teste['num'];
            $python = $teste['python'];
            $django = $teste['django'];
            $email = $teste['email'];
            $expectativa = $teste['expectativa'];
             
            //Execução dos testes
            $retorno = $this->object->aptobackend($python,$django,$email);
            $menssagem = "ATENÇÃO: Teste Número ".$num." Falhou!";
            //Vereificação dos testes
            $this->assertEquals($expectativa, $retorno,$menssagem);
            
        }
    }

    /**
     * @covers Candidato::aptoMobile
     * @todo   Implement test_aptomobile().
     */
    public function test_aptomobile() {
        // Preparação dos dados
        $testes = array(
            '1'=> array(
                'num' => 1,
                'ios' => TRUE,
                'android' => TRUE,
                'email' => '',
                'expectativa' => TRUE),
            '2'=> array(
                'num' => 2,
                'ios' => FALSE,
                'android' => TRUE,
                'email' => '',
                'expectativa' => TRUE),
            '3'=> array(
                'num' => 3,
                'ios' => TRUE,
                'android' => FALSE,
                'email' => '',
                'expectativa' => TRUE),
            '4'=> array(
                'num' => 4,
                'ios' => FALSE,
                'android' => FALSE,
                'email' => '',
                'expectativa' => FALSE));
        
        foreach($testes as $teste){
            //Carregando variaveis
            $num = $teste['num'];
            $ios = $teste['ios'];
            $android = $teste['android'];
            $email = $teste['email'];
            $expectativa = $teste['expectativa'];
            
            //execução dos testes
            $retorno = $this->object->aptomobile($ios,$android,$email);
            $menssagem = "ATENÇÃO: Teste Número ".$num." Falhou!";
            //Vereificação do teste
            $this->assertEquals($expectativa, $retorno,$menssagem);           
        }
    }

    /**
     * @covers Candidato::avaliacao
     * @todo   Implement test_avaliacao().
     */
    public function test_avaliacao() {
        $output = $this->request('Candidato/avaliacao');
	$this->assertContains('<title>Meus Pedidos</title>', $output);
    }

}
